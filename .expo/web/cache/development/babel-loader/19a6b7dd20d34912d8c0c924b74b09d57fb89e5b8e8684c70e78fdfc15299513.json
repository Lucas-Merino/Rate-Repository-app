{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"name\"];\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nimport React from \"react\";\nimport { Formik, useField } from \"formik\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar initialValues = {\n  email: \"\",\n  password: \"\"\n};\nvar FormikInputValue = function FormikInputValue(_ref) {\n  var name = _ref.name,\n    props = _objectWithoutProperties(_ref, _excluded);\n  var _useField = useField(name),\n    _useField2 = _slicedToArray(_useField, 3),\n    field = _useField2[0],\n    meta = _useField2[1],\n    helpers = _useField2[2];\n  return _jsxs(_Fragment, {\n    children: [_jsx(TextInput, _objectSpread({\n      style: styles.textInput,\n      value: field.value,\n      onChangeText: function onChangeText(value) {\n        return helpers.setValue(value);\n      }\n    }, props)), meta.error && _jsx(Text, {\n      style: styles.error,\n      children: meta.error\n    })]\n  });\n};\nvar validate = function validate(values) {\n  var errors = {};\n  if (!values.email) {\n    errors.email = \"Email is Required\";\n  } else if (!/^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/i.test(values.email)) {\n    errors.email = \"Invalid email adress\";\n  }\n};\nexport default function () {\n  return _jsx(Formik, {\n    validate: validate,\n    initialValues: initialValues,\n    onSubmit: function onSubmit(values) {\n      return console.log(values);\n    },\n    children: function children(_ref2) {\n      var handleSubmit = _ref2.handleSubmit;\n      return _jsxs(View, {\n        style: styles.form,\n        children: [_jsx(FormikInputValue, {\n          name: \"email\",\n          placeholder: \"E-mail\"\n        }), _jsx(FormikInputValue, {\n          name: \"password\",\n          placeholder: \"password\",\n          secureTextEntry: true\n        }), _jsx(Button, {\n          onPress: handleSubmit,\n          title: \"Log In\"\n        })]\n      });\n    }\n  });\n}\nvar styles = StyleSheet.create({\n  textInput: {\n    borderRadius: 5,\n    borderWidth: 1,\n    borderColor: \"#999\",\n    paddingHorizontal: 20,\n    paddingVertical: 10,\n    marginVertical: 10\n  },\n  form: {\n    margin: 12\n  },\n  error: {\n    color: \"red\",\n    fontSize: 10,\n    marginBottom: 20,\n    marginTop: -5\n  }\n});","map":{"version":3,"names":["React","Formik","useField","View","TextInput","Button","StyleSheet","jsx","_jsx","Fragment","_Fragment","jsxs","_jsxs","initialValues","email","password","FormikInputValue","_ref","name","props","_objectWithoutProperties","_excluded","_useField","_useField2","_slicedToArray","field","meta","helpers","children","_objectSpread","style","styles","textInput","value","onChangeText","setValue","error","Text","validate","values","errors","test","onSubmit","console","log","_ref2","handleSubmit","form","placeholder","secureTextEntry","onPress","title","create","borderRadius","borderWidth","borderColor","paddingHorizontal","paddingVertical","marginVertical","margin","color","fontSize","marginBottom","marginTop"],"sources":["C:/Users/Lucas/Desktop/DISEÃ‘O WEB 1.0/GitProbando/rate-repository-app/src/Pages/login.jsx"],"sourcesContent":["import React from \"react\";\r\nimport { Formik, useField } from \"formik\"\r\nimport { View, TextInput, Button, StyleSheet } from \"react-native\";\r\n\r\nconst initialValues = {\r\n    email: \"\", \r\n    password: \"\", \r\n}\r\n\r\nconst FormikInputValue = ({name, ...props}) => {\r\n    const [field, meta, helpers ] = useField(name)\r\n    return (\r\n        <>\r\n            <TextInput \r\n                style={styles.textInput}\r\n                value={field.value} \r\n                onChangeText={value => helpers.setValue(value)} \r\n                {...props}\r\n            />\r\n            {meta.error && <Text style={styles.error}>{meta.error}</Text>}\r\n        </>\r\n    )\r\n}\r\n\r\nconst validate = values =>{\r\n    const errors = {}\r\n\r\n    if(!values.email){\r\n        errors.email = \"Email is Required\"\r\n    }else if(!/^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/i.test(values.email)){\r\n        errors.email = \"Invalid email adress\"\r\n    }\r\n}\r\n\r\nexport default function(){\r\n    return(\r\n        <Formik \r\n            validate={validate}\r\n            initialValues={initialValues}\r\n            onSubmit={values => console.log(values)}\r\n        >\r\n            {({ handleSubmit}) =>{\r\n                return (\r\n                <View style={styles.form}>\r\n                    <FormikInputValue    \r\n                        name=\"email\"\r\n                        placeholder=\"E-mail\"\r\n                    />\r\n                    <FormikInputValue \r\n                        name=\"password\"\r\n                        placeholder=\"password\"\r\n                        secureTextEntry\r\n                    />\r\n                    <Button onPress={handleSubmit} title=\"Log In\"/>\r\n                </View>\r\n                )\r\n            }}\r\n        </Formik>\r\n    )\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    textInput: {\r\n        borderRadius: 5, \r\n        borderWidth: 1, \r\n        borderColor: \"#999\",\r\n        paddingHorizontal: 20, \r\n        paddingVertical: 10,\r\n        marginVertical: 10, \r\n    },\r\n    form: {\r\n        margin: 12,\r\n    },\r\n    error:{\r\n        color: \"red\",\r\n        fontSize: 10,\r\n        marginBottom: 20, \r\n        marginTop: -5,  \r\n    }\r\n})"],"mappings":";;;;;;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,MAAM,EAAEC,QAAQ,QAAQ,QAAQ;AAAA,OAAAC,IAAA;AAAA,OAAAC,SAAA;AAAA,OAAAC,MAAA;AAAA,OAAAC,UAAA;AAAA,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAGzC,IAAMC,aAAa,GAAG;EAClBC,KAAK,EAAE,EAAE;EACTC,QAAQ,EAAE;AACd,CAAC;AAED,IAAMC,gBAAgB,GAAG,SAAnBA,gBAAgBA,CAAAC,IAAA,EAAyB;EAAA,IAApBC,IAAI,GAAAD,IAAA,CAAJC,IAAI;IAAKC,KAAK,GAAAC,wBAAA,CAAAH,IAAA,EAAAI,SAAA;EACrC,IAAAC,SAAA,GAAgCpB,QAAQ,CAACgB,IAAI,CAAC;IAAAK,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAAvCG,KAAK,GAAAF,UAAA;IAAEG,IAAI,GAAAH,UAAA;IAAEI,OAAO,GAAAJ,UAAA;EAC3B,OACIX,KAAA,CAAAF,SAAA;IAAAkB,QAAA,GACIpB,IAAA,CAACJ,SAAS,EAAAyB,aAAA;MACNC,KAAK,EAAEC,MAAM,CAACC,SAAU;MACxBC,KAAK,EAAER,KAAK,CAACQ,KAAM;MACnBC,YAAY,EAAE,SAAAA,aAAAD,KAAK;QAAA,OAAIN,OAAO,CAACQ,QAAQ,CAACF,KAAK,CAAC;MAAA;IAAC,GAC3Cd,KAAK,EACX,EACDO,IAAI,CAACU,KAAK,IAAI5B,IAAA,CAAC6B,IAAI;MAACP,KAAK,EAAEC,MAAM,CAACK,KAAM;MAAAR,QAAA,EAAEF,IAAI,CAACU;IAAK,EAAQ;EAAA,EAC9D;AAEX,CAAC;AAED,IAAME,QAAQ,GAAG,SAAXA,QAAQA,CAAGC,MAAM,EAAG;EACtB,IAAMC,MAAM,GAAG,CAAC,CAAC;EAEjB,IAAG,CAACD,MAAM,CAACzB,KAAK,EAAC;IACb0B,MAAM,CAAC1B,KAAK,GAAG,mBAAmB;EACtC,CAAC,MAAK,IAAG,CAAC,uEAAuE,CAAC2B,IAAI,CAACF,MAAM,CAACzB,KAAK,CAAC,EAAC;IACjG0B,MAAM,CAAC1B,KAAK,GAAG,sBAAsB;EACzC;AACJ,CAAC;AAED,eAAe,YAAU;EACrB,OACIN,IAAA,CAACP,MAAM;IACHqC,QAAQ,EAAEA,QAAS;IACnBzB,aAAa,EAAEA,aAAc;IAC7B6B,QAAQ,EAAE,SAAAA,SAAAH,MAAM;MAAA,OAAII,OAAO,CAACC,GAAG,CAACL,MAAM,CAAC;IAAA,CAAC;IAAAX,QAAA,EAEvC,SAAAA,SAAAiB,KAAA,EAAoB;MAAA,IAAjBC,YAAY,GAAAD,KAAA,CAAZC,YAAY;MACZ,OACAlC,KAAA,CAACT,IAAI;QAAC2B,KAAK,EAAEC,MAAM,CAACgB,IAAK;QAAAnB,QAAA,GACrBpB,IAAA,CAACQ,gBAAgB;UACbE,IAAI,EAAC,OAAO;UACZ8B,WAAW,EAAC;QAAQ,EACtB,EACFxC,IAAA,CAACQ,gBAAgB;UACbE,IAAI,EAAC,UAAU;UACf8B,WAAW,EAAC,UAAU;UACtBC,eAAe;QAAA,EACjB,EACFzC,IAAA,CAACH,MAAM;UAAC6C,OAAO,EAAEJ,YAAa;UAACK,KAAK,EAAC;QAAQ,EAAE;MAAA,EAC5C;IAEX;EAAC,EACI;AAEjB;AAEA,IAAMpB,MAAM,GAAGzB,UAAU,CAAC8C,MAAM,CAAC;EAC7BpB,SAAS,EAAE;IACPqB,YAAY,EAAE,CAAC;IACfC,WAAW,EAAE,CAAC;IACdC,WAAW,EAAE,MAAM;IACnBC,iBAAiB,EAAE,EAAE;IACrBC,eAAe,EAAE,EAAE;IACnBC,cAAc,EAAE;EACpB,CAAC;EACDX,IAAI,EAAE;IACFY,MAAM,EAAE;EACZ,CAAC;EACDvB,KAAK,EAAC;IACFwB,KAAK,EAAE,KAAK;IACZC,QAAQ,EAAE,EAAE;IACZC,YAAY,EAAE,EAAE;IAChBC,SAAS,EAAE,CAAC;EAChB;AACJ,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}