{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"name\"];\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nimport React from \"react\";\nimport { Formik, useField } from \"formik\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar initialValues = {\n  email: \"\",\n  password: \"\"\n};\nvar FormikInputValue = function FormikInputValue(_ref) {\n  var name = _ref.name,\n    props = _objectWithoutProperties(_ref, _excluded);\n  var _useField = useField(name),\n    _useField2 = _slicedToArray(_useField, 3),\n    field = _useField2[0],\n    meta = _useField2[1],\n    helpers = _useField2[2];\n  return _jsx(TextInput, _objectSpread({\n    style: styles.textInput,\n    value: field.value,\n    onChangeText: function onChangeText(value) {\n      return helpers.setValue(value);\n    }\n  }, props));\n};\nexport default function () {\n  return _jsx(Formik, {\n    initialValues: initialValues,\n    onSubmit: function onSubmit(values) {\n      return console.log(values);\n    },\n    children: function children(_ref2) {\n      var handleChange = _ref2.handleChange,\n        handleSubmit = _ref2.handleSubmit,\n        values = _ref2.values;\n      return _jsxs(View, {\n        style: styles.form,\n        children: [_jsx(FormikInputValue, {\n          style: styles.textInput,\n          placeholder: \"E-mail\",\n          value: values.email,\n          onChangeText: handleChange(\"email\")\n        }), _jsx(FormikInputValue, {\n          style: styles.textInput,\n          placeholder: \"password\",\n          value: values.password,\n          onChangeText: handleChange(\"password\")\n        }), _jsx(Button, {\n          onPress: handleSubmit,\n          title: \"Log In\"\n        })]\n      });\n    }\n  });\n}\nvar styles = StyleSheet.create({\n  textInput: {\n    borderRadius: 5,\n    borderWidth: 1,\n    borderColor: \"#999\",\n    paddingHorizontal: 20,\n    paddingVertical: 10,\n    marginVertical: 10\n  },\n  form: {\n    margin: 12\n  }\n});","map":{"version":3,"names":["React","Formik","useField","View","TextInput","Button","StyleSheet","jsx","_jsx","jsxs","_jsxs","initialValues","email","password","FormikInputValue","_ref","name","props","_objectWithoutProperties","_excluded","_useField","_useField2","_slicedToArray","field","meta","helpers","_objectSpread","style","styles","textInput","value","onChangeText","setValue","onSubmit","values","console","log","children","_ref2","handleChange","handleSubmit","form","placeholder","onPress","title","create","borderRadius","borderWidth","borderColor","paddingHorizontal","paddingVertical","marginVertical","margin"],"sources":["C:/Users/Lucas/Desktop/DISEÃ‘O WEB 1.0/GitProbando/rate-repository-app/src/Pages/login.jsx"],"sourcesContent":["import React from \"react\";\r\nimport { Formik, useField } from \"formik\"\r\nimport { View, TextInput, Button, StyleSheet } from \"react-native\";\r\n\r\nconst initialValues = {\r\n    email: \"\", \r\n    password: \"\", \r\n}\r\n\r\nconst FormikInputValue = ({name, ...props}) => {\r\n    const [field, meta, helpers ] = useField(name)\r\n    return (\r\n        <TextInput \r\n            style={styles.textInput}\r\n            value={field.value} \r\n            onChangeText={value => helpers.setValue(value)} \r\n            {...props}\r\n        />\r\n    )\r\n}\r\n\r\nexport default function(){\r\n    return(\r\n        <Formik \r\n            initialValues={initialValues}\r\n            onSubmit={values => console.log(values)}\r\n        >\r\n            {({handleChange, handleSubmit, values}) =>{\r\n                return (\r\n                <View style={styles.form}>\r\n                    <FormikInputValue \r\n                        style={styles.textInput}\r\n                        placeholder=\"E-mail\"\r\n                        value={values.email} \r\n                        onChangeText={handleChange(\"email\")}   \r\n                    />\r\n                    <FormikInputValue \r\n                        style={styles.textInput}\r\n                        placeholder=\"password\"\r\n                        value={values.password} \r\n                        onChangeText={handleChange(\"password\")}  \r\n                    />\r\n                    <Button onPress={handleSubmit} title=\"Log In\"/>\r\n                </View>\r\n                )\r\n            }}\r\n        </Formik>\r\n    )\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    textInput: {\r\n        borderRadius: 5, \r\n        borderWidth: 1, \r\n        borderColor: \"#999\",\r\n        paddingHorizontal: 20, \r\n        paddingVertical: 10,\r\n        marginVertical: 10, \r\n    },\r\n    form: {\r\n        margin: 12,\r\n    }\r\n})"],"mappings":";;;;;;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,MAAM,EAAEC,QAAQ,QAAQ,QAAQ;AAAA,OAAAC,IAAA;AAAA,OAAAC,SAAA;AAAA,OAAAC,MAAA;AAAA,OAAAC,UAAA;AAAA,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAGzC,IAAMC,aAAa,GAAG;EAClBC,KAAK,EAAE,EAAE;EACTC,QAAQ,EAAE;AACd,CAAC;AAED,IAAMC,gBAAgB,GAAG,SAAnBA,gBAAgBA,CAAAC,IAAA,EAAyB;EAAA,IAApBC,IAAI,GAAAD,IAAA,CAAJC,IAAI;IAAKC,KAAK,GAAAC,wBAAA,CAAAH,IAAA,EAAAI,SAAA;EACrC,IAAAC,SAAA,GAAgClB,QAAQ,CAACc,IAAI,CAAC;IAAAK,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAAvCG,KAAK,GAAAF,UAAA;IAAEG,IAAI,GAAAH,UAAA;IAAEI,OAAO,GAAAJ,UAAA;EAC3B,OACIb,IAAA,CAACJ,SAAS,EAAAsB,aAAA;IACNC,KAAK,EAAEC,MAAM,CAACC,SAAU;IACxBC,KAAK,EAAEP,KAAK,CAACO,KAAM;IACnBC,YAAY,EAAE,SAAAA,aAAAD,KAAK;MAAA,OAAIL,OAAO,CAACO,QAAQ,CAACF,KAAK,CAAC;IAAA;EAAC,GAC3Cb,KAAK,EACX;AAEV,CAAC;AAED,eAAe,YAAU;EACrB,OACIT,IAAA,CAACP,MAAM;IACHU,aAAa,EAAEA,aAAc;IAC7BsB,QAAQ,EAAE,SAAAA,SAAAC,MAAM;MAAA,OAAIC,OAAO,CAACC,GAAG,CAACF,MAAM,CAAC;IAAA,CAAC;IAAAG,QAAA,EAEvC,SAAAA,SAAAC,KAAA,EAAyC;MAAA,IAAvCC,YAAY,GAAAD,KAAA,CAAZC,YAAY;QAAEC,YAAY,GAAAF,KAAA,CAAZE,YAAY;QAAEN,MAAM,GAAAI,KAAA,CAANJ,MAAM;MACjC,OACAxB,KAAA,CAACP,IAAI;QAACwB,KAAK,EAAEC,MAAM,CAACa,IAAK;QAAAJ,QAAA,GACrB7B,IAAA,CAACM,gBAAgB;UACba,KAAK,EAAEC,MAAM,CAACC,SAAU;UACxBa,WAAW,EAAC,QAAQ;UACpBZ,KAAK,EAAEI,MAAM,CAACtB,KAAM;UACpBmB,YAAY,EAAEQ,YAAY,CAAC,OAAO;QAAE,EACtC,EACF/B,IAAA,CAACM,gBAAgB;UACba,KAAK,EAAEC,MAAM,CAACC,SAAU;UACxBa,WAAW,EAAC,UAAU;UACtBZ,KAAK,EAAEI,MAAM,CAACrB,QAAS;UACvBkB,YAAY,EAAEQ,YAAY,CAAC,UAAU;QAAE,EACzC,EACF/B,IAAA,CAACH,MAAM;UAACsC,OAAO,EAAEH,YAAa;UAACI,KAAK,EAAC;QAAQ,EAAE;MAAA,EAC5C;IAEX;EAAC,EACI;AAEjB;AAEA,IAAMhB,MAAM,GAAGtB,UAAU,CAACuC,MAAM,CAAC;EAC7BhB,SAAS,EAAE;IACPiB,YAAY,EAAE,CAAC;IACfC,WAAW,EAAE,CAAC;IACdC,WAAW,EAAE,MAAM;IACnBC,iBAAiB,EAAE,EAAE;IACrBC,eAAe,EAAE,EAAE;IACnBC,cAAc,EAAE;EACpB,CAAC;EACDV,IAAI,EAAE;IACFW,MAAM,EAAE;EACZ;AACJ,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}